@using System.Web.Http
@using System.Web.Http.Controllers
@using System.Web.Http.Description
@using System.Collections.ObjectModel
@using Edutor.Web.Api.Areas.HelpPage;

@model Collection<ApiDescription>

@{
    ViewBag.Title = "REST APIs - edutor";

    // Group APIs by controller
    ILookup<HttpControllerDescriptor, ApiDescription> apiGroups = Model.ToLookup(api => api.ActionDescriptor.ControllerDescriptor);
    var conf = ViewBag.Conf as HttpConfiguration;
}

<header class="help-page">
    <div class="content-wrapper">
        <div class="float-left">
            <h1>REST APIs - edutor</h1>
        </div>
    </div>
</header>
<div id="body" class="help-page">
    <section class="content-wrapper main-content clear-fix">
        @foreach (var apiGroup in apiGroups)
        {
            var controllerDocumentation = ViewBag.DocumentationProvider != null ? ViewBag.DocumentationProvider.GetDocumentation(apiGroup.Key) : null;

            <h2>@apiGroup.Key.ControllerName</h2>

            if (!String.IsNullOrEmpty(controllerDocumentation))
            {
                <p>@controllerDocumentation</p>
            }

            foreach (var endpoint in apiGroup)
            {
                var apiModel = conf.GetHelpPageApiModel(endpoint.GetFriendlyId());
                <h3>@endpoint.HttpMethod @endpoint.RelativePath</h3>
                <h4>Descripción</h4>
                if (endpoint.Documentation != null)
                {
                    <p>@endpoint.Documentation</p>
                }
                else
                {
                    <p>Sin documentación.</p>
                }
                if (apiModel.RequiresAuth)
                {
                    <h4>Autorización</h4>
                    <p>@apiModel.AuthorizationMessage</p>
                }
                <h4>Información de la petición</h4>
                <h5>Parámetros de la URI</h5>
                @Html.DisplayFor(m => apiModel.UriParameters, "Parameters");
                <h5>Parámetros del cuerpo</h5>
                <p>@apiModel.RequestDocumentation</p>
                if (apiModel.RequestModelDescription != null)
                {
                    Html.DisplayFor(m => apiModel.RequestModelDescription.ModelType, "ModelDescriptionLink", new { modelDescription = apiModel.RequestModelDescription });
                    if (apiModel.RequestBodyParameters != null)
                    {
                        @Html.DisplayFor(m => apiModel.RequestBodyParameters, "Parameters")
                    }
                }
                else
                {
                    <p>Ninguno.</p>
                }

                if (apiModel.SampleRequests.Count > 0)
                {
                    <h5>Formato de solicitud</h5>
                    @Html.DisplayFor(m => apiModel.SampleRequests, "Samples")
                }

                <h4>Información de la respuesta</h4>

                <h5>Descripción de la respuesta</h5>

                <p>@endpoint.ResponseDescription.Documentation</p>

                if (apiModel.ResourceDescription != null)
                {
                    @*@Html.DisplayFor(m => apiModel.ResourceDescription.ModelType, "ModelDescriptionLink", new { modelDescription = Model.ResourceDescription })*@
                    if (apiModel.ResourceProperties != null)
                    {
                        @Html.DisplayFor(m => apiModel.ResourceProperties, "Parameters")
                    }
                }
                else
                {
                    <p>Ninguno.</p>
                }

                if (apiModel.SampleResponses.Count > 0)
                {
                    <h4>Formato de respuesta</h4>
                    @Html.DisplayFor(m => apiModel.SampleResponses, "Samples")
                }

            }
        }
    </section>
</div>
